$date
	Wed Sep  9 10:41:51 2015
$end
$version
	QuestaSim Version 10.3c
$end
$timescale
	1ps
$end

$scope module top $end

$scope module u_dut_1m2s $end
$var wire 1 ! w_paddr [31] $end
$var wire 1 " w_paddr [30] $end
$var wire 1 # w_paddr [29] $end
$var wire 1 $ w_paddr [28] $end
$var wire 1 % w_paddr [27] $end
$var wire 1 & w_paddr [26] $end
$var wire 1 ' w_paddr [25] $end
$var wire 1 ( w_paddr [24] $end
$var wire 1 ) w_paddr [23] $end
$var wire 1 * w_paddr [22] $end
$var wire 1 + w_paddr [21] $end
$var wire 1 , w_paddr [20] $end
$var wire 1 - w_paddr [19] $end
$var wire 1 . w_paddr [18] $end
$var wire 1 / w_paddr [17] $end
$var wire 1 0 w_paddr [16] $end
$var wire 1 1 w_paddr [15] $end
$var wire 1 2 w_paddr [14] $end
$var wire 1 3 w_paddr [13] $end
$var wire 1 4 w_paddr [12] $end
$var wire 1 5 w_paddr [11] $end
$var wire 1 6 w_paddr [10] $end
$var wire 1 7 w_paddr [9] $end
$var wire 1 8 w_paddr [8] $end
$var wire 1 9 w_paddr [7] $end
$var wire 1 : w_paddr [6] $end
$var wire 1 ; w_paddr [5] $end
$var wire 1 < w_paddr [4] $end
$var wire 1 = w_paddr [3] $end
$var wire 1 > w_paddr [2] $end
$var wire 1 ? w_paddr [1] $end
$var wire 1 @ w_paddr [0] $end
$var wire 1 A w_prwd [0] $end
$var wire 1 B w_pwdata [31] $end
$var wire 1 C w_pwdata [30] $end
$var wire 1 D w_pwdata [29] $end
$var wire 1 E w_pwdata [28] $end
$var wire 1 F w_pwdata [27] $end
$var wire 1 G w_pwdata [26] $end
$var wire 1 H w_pwdata [25] $end
$var wire 1 I w_pwdata [24] $end
$var wire 1 J w_pwdata [23] $end
$var wire 1 K w_pwdata [22] $end
$var wire 1 L w_pwdata [21] $end
$var wire 1 M w_pwdata [20] $end
$var wire 1 N w_pwdata [19] $end
$var wire 1 O w_pwdata [18] $end
$var wire 1 P w_pwdata [17] $end
$var wire 1 Q w_pwdata [16] $end
$var wire 1 R w_pwdata [15] $end
$var wire 1 S w_pwdata [14] $end
$var wire 1 T w_pwdata [13] $end
$var wire 1 U w_pwdata [12] $end
$var wire 1 V w_pwdata [11] $end
$var wire 1 W w_pwdata [10] $end
$var wire 1 X w_pwdata [9] $end
$var wire 1 Y w_pwdata [8] $end
$var wire 1 Z w_pwdata [7] $end
$var wire 1 [ w_pwdata [6] $end
$var wire 1 \ w_pwdata [5] $end
$var wire 1 ] w_pwdata [4] $end
$var wire 1 ^ w_pwdata [3] $end
$var wire 1 _ w_pwdata [2] $end
$var wire 1 ` w_pwdata [1] $end
$var wire 1 a w_pwdata [0] $end
$var wire 1 b w_psel [15] $end
$var wire 1 c w_psel [14] $end
$var wire 1 d w_psel [13] $end
$var wire 1 e w_psel [12] $end
$var wire 1 f w_psel [11] $end
$var wire 1 g w_psel [10] $end
$var wire 1 h w_psel [9] $end
$var wire 1 i w_psel [8] $end
$var wire 1 j w_psel [7] $end
$var wire 1 k w_psel [6] $end
$var wire 1 l w_psel [5] $end
$var wire 1 m w_psel [4] $end
$var wire 1 n w_psel [3] $end
$var wire 1 o w_psel [2] $end
$var wire 1 p w_psel [1] $end
$var wire 1 q w_psel [0] $end
$var wire 1 r w_penable [0] $end
$var wire 1 s w_prdata $end
$var wire 1 t w_pslverr $end
$var wire 1 u w_pready $end

$scope begin S[1] $end

$scope module u_apb_slave $end
$var wire 1 v clk [0] $end
$var wire 1 w resetn [0] $end
$var wire 1 ! paddr [31] $end
$var wire 1 " paddr [30] $end
$var wire 1 # paddr [29] $end
$var wire 1 $ paddr [28] $end
$var wire 1 % paddr [27] $end
$var wire 1 & paddr [26] $end
$var wire 1 ' paddr [25] $end
$var wire 1 ( paddr [24] $end
$var wire 1 ) paddr [23] $end
$var wire 1 * paddr [22] $end
$var wire 1 + paddr [21] $end
$var wire 1 , paddr [20] $end
$var wire 1 - paddr [19] $end
$var wire 1 . paddr [18] $end
$var wire 1 / paddr [17] $end
$var wire 1 0 paddr [16] $end
$var wire 1 1 paddr [15] $end
$var wire 1 2 paddr [14] $end
$var wire 1 3 paddr [13] $end
$var wire 1 4 paddr [12] $end
$var wire 1 5 paddr [11] $end
$var wire 1 6 paddr [10] $end
$var wire 1 7 paddr [9] $end
$var wire 1 8 paddr [8] $end
$var wire 1 9 paddr [7] $end
$var wire 1 : paddr [6] $end
$var wire 1 ; paddr [5] $end
$var wire 1 < paddr [4] $end
$var wire 1 = paddr [3] $end
$var wire 1 > paddr [2] $end
$var wire 1 ? paddr [1] $end
$var wire 1 @ paddr [0] $end
$var wire 1 A prwd [0] $end
$var wire 1 B pwdata [31] $end
$var wire 1 C pwdata [30] $end
$var wire 1 D pwdata [29] $end
$var wire 1 E pwdata [28] $end
$var wire 1 F pwdata [27] $end
$var wire 1 G pwdata [26] $end
$var wire 1 H pwdata [25] $end
$var wire 1 I pwdata [24] $end
$var wire 1 J pwdata [23] $end
$var wire 1 K pwdata [22] $end
$var wire 1 L pwdata [21] $end
$var wire 1 M pwdata [20] $end
$var wire 1 N pwdata [19] $end
$var wire 1 O pwdata [18] $end
$var wire 1 P pwdata [17] $end
$var wire 1 Q pwdata [16] $end
$var wire 1 R pwdata [15] $end
$var wire 1 S pwdata [14] $end
$var wire 1 T pwdata [13] $end
$var wire 1 U pwdata [12] $end
$var wire 1 V pwdata [11] $end
$var wire 1 W pwdata [10] $end
$var wire 1 X pwdata [9] $end
$var wire 1 Y pwdata [8] $end
$var wire 1 Z pwdata [7] $end
$var wire 1 [ pwdata [6] $end
$var wire 1 \ pwdata [5] $end
$var wire 1 ] pwdata [4] $end
$var wire 1 ^ pwdata [3] $end
$var wire 1 _ pwdata [2] $end
$var wire 1 ` pwdata [1] $end
$var wire 1 a pwdata [0] $end
$var wire 1 p psel [0] $end
$var wire 1 r penable [0] $end
$var reg 32 x prdata [31:0] $end
$var wire 1 y pslverr [0] $end
$var wire 1 z pready [0] $end
$upscope $end
$upscope $end

$scope begin S[0] $end

$scope module u_apb_slave $end
$var wire 1 v clk [0] $end
$var wire 1 w resetn [0] $end
$var wire 1 ! paddr [31] $end
$var wire 1 " paddr [30] $end
$var wire 1 # paddr [29] $end
$var wire 1 $ paddr [28] $end
$var wire 1 % paddr [27] $end
$var wire 1 & paddr [26] $end
$var wire 1 ' paddr [25] $end
$var wire 1 ( paddr [24] $end
$var wire 1 ) paddr [23] $end
$var wire 1 * paddr [22] $end
$var wire 1 + paddr [21] $end
$var wire 1 , paddr [20] $end
$var wire 1 - paddr [19] $end
$var wire 1 . paddr [18] $end
$var wire 1 / paddr [17] $end
$var wire 1 0 paddr [16] $end
$var wire 1 1 paddr [15] $end
$var wire 1 2 paddr [14] $end
$var wire 1 3 paddr [13] $end
$var wire 1 4 paddr [12] $end
$var wire 1 5 paddr [11] $end
$var wire 1 6 paddr [10] $end
$var wire 1 7 paddr [9] $end
$var wire 1 8 paddr [8] $end
$var wire 1 9 paddr [7] $end
$var wire 1 : paddr [6] $end
$var wire 1 ; paddr [5] $end
$var wire 1 < paddr [4] $end
$var wire 1 = paddr [3] $end
$var wire 1 > paddr [2] $end
$var wire 1 ? paddr [1] $end
$var wire 1 @ paddr [0] $end
$var wire 1 A prwd [0] $end
$var wire 1 B pwdata [31] $end
$var wire 1 C pwdata [30] $end
$var wire 1 D pwdata [29] $end
$var wire 1 E pwdata [28] $end
$var wire 1 F pwdata [27] $end
$var wire 1 G pwdata [26] $end
$var wire 1 H pwdata [25] $end
$var wire 1 I pwdata [24] $end
$var wire 1 J pwdata [23] $end
$var wire 1 K pwdata [22] $end
$var wire 1 L pwdata [21] $end
$var wire 1 M pwdata [20] $end
$var wire 1 N pwdata [19] $end
$var wire 1 O pwdata [18] $end
$var wire 1 P pwdata [17] $end
$var wire 1 Q pwdata [16] $end
$var wire 1 R pwdata [15] $end
$var wire 1 S pwdata [14] $end
$var wire 1 T pwdata [13] $end
$var wire 1 U pwdata [12] $end
$var wire 1 V pwdata [11] $end
$var wire 1 W pwdata [10] $end
$var wire 1 X pwdata [9] $end
$var wire 1 Y pwdata [8] $end
$var wire 1 Z pwdata [7] $end
$var wire 1 [ pwdata [6] $end
$var wire 1 \ pwdata [5] $end
$var wire 1 ] pwdata [4] $end
$var wire 1 ^ pwdata [3] $end
$var wire 1 _ pwdata [2] $end
$var wire 1 ` pwdata [1] $end
$var wire 1 a pwdata [0] $end
$var wire 1 q psel [0] $end
$var wire 1 r penable [0] $end
$var reg 32 { prdata [31:0] $end
$var wire 1 t pslverr [0] $end
$var wire 1 u pready [0] $end
$upscope $end
$upscope $end

$scope begin M[0] $end

$scope module u_apb_master $end
$var wire 1 v clk [0] $end
$var wire 1 w resetn [0] $end
$var wire 1 ! paddr [31] $end
$var wire 1 " paddr [30] $end
$var wire 1 # paddr [29] $end
$var wire 1 $ paddr [28] $end
$var wire 1 % paddr [27] $end
$var wire 1 & paddr [26] $end
$var wire 1 ' paddr [25] $end
$var wire 1 ( paddr [24] $end
$var wire 1 ) paddr [23] $end
$var wire 1 * paddr [22] $end
$var wire 1 + paddr [21] $end
$var wire 1 , paddr [20] $end
$var wire 1 - paddr [19] $end
$var wire 1 . paddr [18] $end
$var wire 1 / paddr [17] $end
$var wire 1 0 paddr [16] $end
$var wire 1 1 paddr [15] $end
$var wire 1 2 paddr [14] $end
$var wire 1 3 paddr [13] $end
$var wire 1 4 paddr [12] $end
$var wire 1 5 paddr [11] $end
$var wire 1 6 paddr [10] $end
$var wire 1 7 paddr [9] $end
$var wire 1 8 paddr [8] $end
$var wire 1 9 paddr [7] $end
$var wire 1 : paddr [6] $end
$var wire 1 ; paddr [5] $end
$var wire 1 < paddr [4] $end
$var wire 1 = paddr [3] $end
$var wire 1 > paddr [2] $end
$var wire 1 ? paddr [1] $end
$var wire 1 @ paddr [0] $end
$var wire 1 A prwd [0] $end
$var reg 32 | pwdata [31:0] $end
$var wire 1 b psel [15] $end
$var wire 1 c psel [14] $end
$var wire 1 d psel [13] $end
$var wire 1 e psel [12] $end
$var wire 1 f psel [11] $end
$var wire 1 g psel [10] $end
$var wire 1 h psel [9] $end
$var wire 1 i psel [8] $end
$var wire 1 j psel [7] $end
$var wire 1 k psel [6] $end
$var wire 1 l psel [5] $end
$var wire 1 m psel [4] $end
$var wire 1 n psel [3] $end
$var wire 1 o psel [2] $end
$var wire 1 p psel [1] $end
$var wire 1 q psel [0] $end
$var wire 1 r penable [0] $end
$var wire 1 } prdata [31] $end
$var wire 1 ~ prdata [30] $end
$var wire 1 !! prdata [29] $end
$var wire 1 "! prdata [28] $end
$var wire 1 #! prdata [27] $end
$var wire 1 $! prdata [26] $end
$var wire 1 %! prdata [25] $end
$var wire 1 &! prdata [24] $end
$var wire 1 '! prdata [23] $end
$var wire 1 (! prdata [22] $end
$var wire 1 )! prdata [21] $end
$var wire 1 *! prdata [20] $end
$var wire 1 +! prdata [19] $end
$var wire 1 ,! prdata [18] $end
$var wire 1 -! prdata [17] $end
$var wire 1 .! prdata [16] $end
$var wire 1 /! prdata [15] $end
$var wire 1 0! prdata [14] $end
$var wire 1 1! prdata [13] $end
$var wire 1 2! prdata [12] $end
$var wire 1 3! prdata [11] $end
$var wire 1 4! prdata [10] $end
$var wire 1 5! prdata [9] $end
$var wire 1 6! prdata [8] $end
$var wire 1 7! prdata [7] $end
$var wire 1 8! prdata [6] $end
$var wire 1 9! prdata [5] $end
$var wire 1 :! prdata [4] $end
$var wire 1 ;! prdata [3] $end
$var wire 1 <! prdata [2] $end
$var wire 1 =! prdata [1] $end
$var wire 1 >! prdata [0] $end
$var wire 1 ?! pslverr [0] $end
$var wire 1 @! pready [0] $end
