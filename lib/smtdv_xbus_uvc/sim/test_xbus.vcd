$date
	Wed Sep  9 10:10:59 2015
$end
$version
	QuestaSim Version 10.3c
$end
$timescale
	1ps
$end

$scope module top $end

$scope module u_dut_1m1s $end
$var wire 1 ! w_req [0] $end
$var wire 1 " w_rw [0] $end
$var wire 1 # w_addr [31] $end
$var wire 1 $ w_addr [30] $end
$var wire 1 % w_addr [29] $end
$var wire 1 & w_addr [28] $end
$var wire 1 ' w_addr [27] $end
$var wire 1 ( w_addr [26] $end
$var wire 1 ) w_addr [25] $end
$var wire 1 * w_addr [24] $end
$var wire 1 + w_addr [23] $end
$var wire 1 , w_addr [22] $end
$var wire 1 - w_addr [21] $end
$var wire 1 . w_addr [20] $end
$var wire 1 / w_addr [19] $end
$var wire 1 0 w_addr [18] $end
$var wire 1 1 w_addr [17] $end
$var wire 1 2 w_addr [16] $end
$var wire 1 3 w_addr [15] $end
$var wire 1 4 w_addr [14] $end
$var wire 1 5 w_addr [13] $end
$var wire 1 6 w_addr [12] $end
$var wire 1 7 w_addr [11] $end
$var wire 1 8 w_addr [10] $end
$var wire 1 9 w_addr [9] $end
$var wire 1 : w_addr [8] $end
$var wire 1 ; w_addr [7] $end
$var wire 1 < w_addr [6] $end
$var wire 1 = w_addr [5] $end
$var wire 1 > w_addr [4] $end
$var wire 1 ? w_addr [3] $end
$var wire 1 @ w_addr [2] $end
$var wire 1 A w_addr [1] $end
$var wire 1 B w_addr [0] $end
$var wire 1 C w_ack [0] $end
$var wire 1 D w_byten [3] $end
$var wire 1 E w_byten [2] $end
$var wire 1 F w_byten [1] $end
$var wire 1 G w_byten [0] $end
$var wire 1 H w_rdata [31] $end
$var wire 1 I w_rdata [30] $end
$var wire 1 J w_rdata [29] $end
$var wire 1 K w_rdata [28] $end
$var wire 1 L w_rdata [27] $end
$var wire 1 M w_rdata [26] $end
$var wire 1 N w_rdata [25] $end
$var wire 1 O w_rdata [24] $end
$var wire 1 P w_rdata [23] $end
$var wire 1 Q w_rdata [22] $end
$var wire 1 R w_rdata [21] $end
$var wire 1 S w_rdata [20] $end
$var wire 1 T w_rdata [19] $end
$var wire 1 U w_rdata [18] $end
$var wire 1 V w_rdata [17] $end
$var wire 1 W w_rdata [16] $end
$var wire 1 X w_rdata [15] $end
$var wire 1 Y w_rdata [14] $end
$var wire 1 Z w_rdata [13] $end
$var wire 1 [ w_rdata [12] $end
$var wire 1 \ w_rdata [11] $end
$var wire 1 ] w_rdata [10] $end
$var wire 1 ^ w_rdata [9] $end
$var wire 1 _ w_rdata [8] $end
$var wire 1 ` w_rdata [7] $end
$var wire 1 a w_rdata [6] $end
$var wire 1 b w_rdata [5] $end
$var wire 1 c w_rdata [4] $end
$var wire 1 d w_rdata [3] $end
$var wire 1 e w_rdata [2] $end
$var wire 1 f w_rdata [1] $end
$var wire 1 g w_rdata [0] $end
$var wire 1 h w_wdata [31] $end
$var wire 1 i w_wdata [30] $end
$var wire 1 j w_wdata [29] $end
$var wire 1 k w_wdata [28] $end
$var wire 1 l w_wdata [27] $end
$var wire 1 m w_wdata [26] $end
$var wire 1 n w_wdata [25] $end
$var wire 1 o w_wdata [24] $end
$var wire 1 p w_wdata [23] $end
$var wire 1 q w_wdata [22] $end
$var wire 1 r w_wdata [21] $end
$var wire 1 s w_wdata [20] $end
$var wire 1 t w_wdata [19] $end
$var wire 1 u w_wdata [18] $end
$var wire 1 v w_wdata [17] $end
$var wire 1 w w_wdata [16] $end
$var wire 1 x w_wdata [15] $end
$var wire 1 y w_wdata [14] $end
$var wire 1 z w_wdata [13] $end
$var wire 1 { w_wdata [12] $end
$var wire 1 | w_wdata [11] $end
$var wire 1 } w_wdata [10] $end
$var wire 1 ~ w_wdata [9] $end
$var wire 1 !! w_wdata [8] $end
$var wire 1 "! w_wdata [7] $end
$var wire 1 #! w_wdata [6] $end
$var wire 1 $! w_wdata [5] $end
$var wire 1 %! w_wdata [4] $end
$var wire 1 &! w_wdata [3] $end
$var wire 1 '! w_wdata [2] $end
$var wire 1 (! w_wdata [1] $end
$var wire 1 )! w_wdata [0] $end

$scope begin S[0] $end

$scope module u_xbus_slave $end
$var wire 1 *! clk [0] $end
$var wire 1 +! resetn [0] $end
$var wire 1 ! req [0] $end
$var wire 1 " rw [0] $end
$var wire 1 # addr [31] $end
$var wire 1 $ addr [30] $end
$var wire 1 % addr [29] $end
$var wire 1 & addr [28] $end
$var wire 1 ' addr [27] $end
$var wire 1 ( addr [26] $end
$var wire 1 ) addr [25] $end
$var wire 1 * addr [24] $end
$var wire 1 + addr [23] $end
$var wire 1 , addr [22] $end
$var wire 1 - addr [21] $end
$var wire 1 . addr [20] $end
$var wire 1 / addr [19] $end
$var wire 1 0 addr [18] $end
$var wire 1 1 addr [17] $end
$var wire 1 2 addr [16] $end
$var wire 1 3 addr [15] $end
$var wire 1 4 addr [14] $end
$var wire 1 5 addr [13] $end
$var wire 1 6 addr [12] $end
$var wire 1 7 addr [11] $end
$var wire 1 8 addr [10] $end
$var wire 1 9 addr [9] $end
$var wire 1 : addr [8] $end
$var wire 1 ; addr [7] $end
$var wire 1 < addr [6] $end
$var wire 1 = addr [5] $end
$var wire 1 > addr [4] $end
$var wire 1 ? addr [3] $end
$var wire 1 @ addr [2] $end
$var wire 1 A addr [1] $end
$var wire 1 B addr [0] $end
$var wire 1 C ack [0] $end
$var wire 1 D byten [3] $end
$var wire 1 E byten [2] $end
$var wire 1 F byten [1] $end
$var wire 1 G byten [0] $end
$var reg 32 ,! rdata [31:0] $end
$var wire 1 h wdata [31] $end
$var wire 1 i wdata [30] $end
$var wire 1 j wdata [29] $end
$var wire 1 k wdata [28] $end
$var wire 1 l wdata [27] $end
$var wire 1 m wdata [26] $end
$var wire 1 n wdata [25] $end
$var wire 1 o wdata [24] $end
$var wire 1 p wdata [23] $end
$var wire 1 q wdata [22] $end
$var wire 1 r wdata [21] $end
$var wire 1 s wdata [20] $end
$var wire 1 t wdata [19] $end
$var wire 1 u wdata [18] $end
$var wire 1 v wdata [17] $end
$var wire 1 w wdata [16] $end
$var wire 1 x wdata [15] $end
$var wire 1 y wdata [14] $end
$var wire 1 z wdata [13] $end
$var wire 1 { wdata [12] $end
$var wire 1 | wdata [11] $end
$var wire 1 } wdata [10] $end
$var wire 1 ~ wdata [9] $end
$var wire 1 !! wdata [8] $end
$var wire 1 "! wdata [7] $end
$var wire 1 #! wdata [6] $end
$var wire 1 $! wdata [5] $end
$var wire 1 %! wdata [4] $end
$var wire 1 &! wdata [3] $end
$var wire 1 '! wdata [2] $end
$var wire 1 (! wdata [1] $end
$var wire 1 )! wdata [0] $end
$upscope $end
$upscope $end

$scope begin M[0] $end

$scope module u_xbus_master $end
$var wire 1 *! clk [0] $end
$var wire 1 +! resetn [0] $end
$var wire 1 ! req [0] $end
$var wire 1 " rw [0] $end
$var reg 32 -! addr [31:0] $end
$var wire 1 C ack [0] $end
$var wire 1 D byten [3] $end
$var wire 1 E byten [2] $end
$var wire 1 F byten [1] $end
$var wire 1 G byten [0] $end
$var wire 1 H rdata [31] $end
$var wire 1 I rdata [30] $end
$var wire 1 J rdata [29] $end
$var wire 1 K rdata [28] $end
$var wire 1 L rdata [27] $end
$var wire 1 M rdata [26] $end
$var wire 1 N rdata [25] $end
$var wire 1 O rdata [24] $end
$var wire 1 P rdata [23] $end
$var wire 1 Q rdata [22] $end
$var wire 1 R rdata [21] $end
$var wire 1 S rdata [20] $end
$var wire 1 T rdata [19] $end
$var wire 1 U rdata [18] $end
$var wire 1 V rdata [17] $end
$var wire 1 W rdata [16] $end
$var wire 1 X rdata [15] $end
$var wire 1 Y rdata [14] $end
$var wire 1 Z rdata [13] $end
$var wire 1 [ rdata [12] $end
$var wire 1 \ rdata [11] $end
$var wire 1 ] rdata [10] $end
$var wire 1 ^ rdata [9] $end
$var wire 1 _ rdata [8] $end
$var wire 1 ` rdata [7] $end
$var wire 1 a rdata [6] $end
$var wire 1 b rdata [5] $end
$var wire 1 c rdata [4] $end
$var wire 1 d rdata [3] $end
$var wire 1 e rdata [2] $end
$var wire 1 f rdata [1] $end
$var wire 1 g rdata [0] $end
$var reg 32 .! wdata [31:0] $end
